"""
Script: main_plot_average_heatmap_param.py

Author: Radoslav Jochman

Description:
    This script generates visualizations (heatmaps) of RMSE values from a CSV file created by
    `main_generate_rmse_dist_2samples_param.py`. It produces two heatmaps:
    - The average RMSE for each PC pair, threshold and bin size.
    - The standard error (STE) of the RMSE for each PC pair, threshold and bin size.

    The script uses `ggplot`-based plotting functions defined in the `plotting` module.

Usage:
    python main_plot_average_heatmap_param.py
        --data_location path/to/rmse_data.csv
        --result_dir path/to/output
        --result_name name_for_output_files
        --average_title "Average RMSE Heatmap"
        --ste_title "STE RMSE Heatmap"

Arguments:
    --data_location : str
        Path to the `.csv` file containing the RMSE distributions (must be generated previously using `main_generate_rmse_dist_2samples_param.py`).

    --result_dir : str
        Directory where the output `.png` or `.pdf` files will be saved.

    --result_name : str
        Base filename for the output images (e.g., `"rmse_monkey"` results in `average_rmse_monkey.png` and `ste_rmse_monkey.png`).

    --average_title : str
        Title used in the average RMSE heatmap.

    --ste_title : str
        Title used in the standard error of the RMSE heatmap.

Output:
    - `average_<result_name>.png`: Heatmap showing average RMSE across bin sizes and PC pairs.
    - `ste_<result_name>.png`: Heatmap showing standard error of RMSE for the same combinations.

Requirements:
    - The CSV file must have the following columns: `sample`, `bin_size`, `PC_pair`, `TH`, `RMSE`.
"""
import plotting
import argparse
import helper
import pandas as pd
parser = argparse.ArgumentParser()
parser.add_argument("--data_location", default=None, type=str, help="Path to a csv file with rmse distribution generated by \"main_generate_rmse_dist_param.py\".")
parser.add_argument("--result_dir", default=None, type=str, help="Directory where output results will be stored.")
parser.add_argument("--result_name", default=None, type=str, help="Name of the graph.")
parser.add_argument("--average_title", default=None, type=str, help="Title for average RMSE heatmap graph")
parser.add_argument("--ste_title", default=None, type=str, help="Title for ste of RMSE heatmap graph")

def main(args: argparse.Namespace):
    rmse_dist =pd.read_csv(args.data_location)
    p = plotting.ggplot_average_heatmap_param(rmse_dist, args.average_title)
    p.save(filename=f"{args.result_dir}/average_{args.result_name}", width=8, height=8, dpi=300)
    p = plotting.ggplot_std_heatmap_param(rmse_dist, args.ste_title)
    p.save(filename=f"{args.result_dir}/ste_{args.result_name}", width=8, height=8, dpi=300)

if __name__ == '__main__':
    args = parser.parse_args()
    main(args)
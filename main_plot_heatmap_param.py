"""
Script: main_plot_heatmap_param.py

Author: Radoslav Jochman

Description:
    This script generates a single heatmap visualization from a CSV file containing RMSE distributions.
    The heatmap is created using a `ggplot`-based function defined in the `plotting` module and saved
    to the specified output directory.

Usage:
    python main_plot_heatmap_param.py
        --data_location path/to/rmse_data.csv
        --result_dir path/to/output
        --result_name output_filename

Arguments:
    --data_location : str
        Path to the `.csv` file containing RMSE distribution data.

    --result_dir : str
        Path to the directory where the output image will be saved.

    --result_name : str
        Filename (with or without extension) to use for the saved heatmap.

Output:
    - A heatmap image (e.g., `rmse_heatmap.png`) visualizing RMSE values across PC pairs and bin sizes.

Requirements:
    - The CSV file must contain all necessary columns for plotting (e.g., PC pairs, bin sizes, RMSE).
"""
import plotting
import argparse
import helper
import pandas as pd
parser = argparse.ArgumentParser()
parser.add_argument("--data_location", default=None, type=str, help="Path to a csv file with rmse distribution generated by \"main_generate_rmse_dist_param.py\".")
parser.add_argument("--result_dir", default=None, type=str, help="Directory where output results will be stored.")
parser.add_argument("--result_name", default=None, type=str, help="Name of the graph.")

def main(args: argparse.Namespace):
    rmse_dist =pd.read_csv(args.data_location)
    p = plotting.ggplot_heatmap_param(rmse_dist)
    p.save(filename=f"{args.result_dir}/{args.result_name}", width=8, height=8, dpi=300)
if __name__ == '__main__':
    args = parser.parse_args()
    main(args)
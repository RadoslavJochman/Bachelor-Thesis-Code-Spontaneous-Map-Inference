"""
Script: plot_rmse_bar_chart.py

Author: Radoslav Jochman

Description:
    This script generates a bar chart showing the mean RMSE values across different conditions
    from a CSV file containing RMSE distributions. The CSV should have been generated by
    `main_generate_rmse_dist_in_time.py`. The resulting plot is saved as an image in the specified directory.

Usage:
    python plot_rmse_bar_chart.py
        --data_location path/to/rmse_data.csv
        --result_dir path/to/output
        --result_name output_filename

Arguments:
    --data_location : str
        Path to a `.csv` file containing the RMSE distribution data.

    --result_dir : str
        Path to the directory where the output bar chart image will be saved.

    --result_name : str
        Output filename (without extension) for the saved image.

Output:
    - A bar chart image (e.g., `bar_rmse_plot.png`) visualizing the mean RMSE values per configuration.

Requirements:
    - The CSV file must include columns "sample", "time_diff" ,"RMSE".
"""
import plotting
import argparse
import helper
import pandas as pd
parser = argparse.ArgumentParser()
parser.add_argument("--data_location", default=None, type=str, help="Path to a csv file with rmse distribution generated by \"main_generate_rmse_dist_param.py\".")
parser.add_argument("--result_dir", default=None, type=str, help="Directory where output results will be stored.")
parser.add_argument("--result_name", default=None, type=str, help="Name of the graph.")

def main(args: argparse.Namespace):
    rmse_dist =pd.read_csv(args.data_location)
    p = plotting.ggplot_mean_rmse_bar(rmse_dist)
    p.save(filename=f"{args.result_dir}/bar_{args.result_name}", width=8, height=8, dpi=300)
if __name__ == '__main__':
    args = parser.parse_args()
    main(args)